name: Build and Push Docker Image

on:
  push:
    branches:
      - main  # Exécute ce workflow uniquement si on pousse du code sur "main"

jobs:          #Un job est une tâche que GitHub doit exécuter.
  build:
    runs-on: ubuntu-latest     #On crée un job "build" qui va tourner sur un serveur GitHub avec Ubuntu.

    steps:     # Les étapes à suivre
      - name: Checkout repository
        uses: actions/checkout@v3  # Récupère le code source depuis GitHub

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
              #Cette étape connecte GitHub à Docker Hub en utilisant les secrets

      - name: Build Docker images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mon_projet_backend:latest ./backend
          docker build -t ${{ secrets.DOCKER_USERNAME }}/mon_projet_frontend:latest ./frontend

      - name: Push Docker images
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/mon_projet_backend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/mon_projet_frontend:latest
# Construire l’image Docker à partir du Dockerfile du backend.
# docker push → Envoie l’image sur Docker Hub pour qu’elle soit disponible partout

      - name: Logout from Docker Hub
        run: docker logout  # Se déconnecter proprement de Docker Hub
